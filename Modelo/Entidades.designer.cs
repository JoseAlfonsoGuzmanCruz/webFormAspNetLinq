#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tutorial")]
	public partial class EntidadesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertciudad(ciudad instance);
    partial void Updateciudad(ciudad instance);
    partial void Deleteciudad(ciudad instance);
    partial void Insertcolor(color instance);
    partial void Updatecolor(color instance);
    partial void Deletecolor(color instance);
    partial void Insertpersona(persona instance);
    partial void Updatepersona(persona instance);
    partial void Deletepersona(persona instance);
    partial void Insertpersona_color(persona_color instance);
    partial void Updatepersona_color(persona_color instance);
    partial void Deletepersona_color(persona_color instance);
    #endregion
		
		public EntidadesDataContext() : 
				base(global::Modelo.Properties.Settings.Default.tutorialConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ciudad> ciudad
		{
			get
			{
				return this.GetTable<ciudad>();
			}
		}
		
		public System.Data.Linq.Table<color> color
		{
			get
			{
				return this.GetTable<color>();
			}
		}
		
		public System.Data.Linq.Table<persona> persona
		{
			get
			{
				return this.GetTable<persona>();
			}
		}
		
		public System.Data.Linq.Table<persona_color> persona_color
		{
			get
			{
				return this.GetTable<persona_color>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ciudad")]
	public partial class ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ciudad;
		
		private string _nombre;
		
		private EntitySet<persona> _persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public ciudad()
		{
			this._persona = new EntitySet<persona>(new Action<persona>(this.attach_persona), new Action<persona>(this.detach_persona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudad_persona", Storage="_persona", ThisKey="id_ciudad", OtherKey="ciudad_id")]
		public EntitySet<persona> persona
		{
			get
			{
				return this._persona;
			}
			set
			{
				this._persona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_persona(persona entity)
		{
			this.SendPropertyChanging();
			entity.ciudad = this;
		}
		
		private void detach_persona(persona entity)
		{
			this.SendPropertyChanging();
			entity.ciudad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.color")]
	public partial class color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_color;
		
		private string _nombre;
		
		private string _hexadecimal;
		
		private EntitySet<persona_color> _persona_color;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_colorChanging(int value);
    partial void Onid_colorChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnhexadecimalChanging(string value);
    partial void OnhexadecimalChanged();
    #endregion
		
		public color()
		{
			this._persona_color = new EntitySet<persona_color>(new Action<persona_color>(this.attach_persona_color), new Action<persona_color>(this.detach_persona_color));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_color", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_color
		{
			get
			{
				return this._id_color;
			}
			set
			{
				if ((this._id_color != value))
				{
					this.Onid_colorChanging(value);
					this.SendPropertyChanging();
					this._id_color = value;
					this.SendPropertyChanged("id_color");
					this.Onid_colorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hexadecimal", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string hexadecimal
		{
			get
			{
				return this._hexadecimal;
			}
			set
			{
				if ((this._hexadecimal != value))
				{
					this.OnhexadecimalChanging(value);
					this.SendPropertyChanging();
					this._hexadecimal = value;
					this.SendPropertyChanged("hexadecimal");
					this.OnhexadecimalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="color_persona_color", Storage="_persona_color", ThisKey="id_color", OtherKey="color_id")]
		public EntitySet<persona_color> persona_color
		{
			get
			{
				return this._persona_color;
			}
			set
			{
				this._persona_color.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_persona_color(persona_color entity)
		{
			this.SendPropertyChanging();
			entity.color = this;
		}
		
		private void detach_persona_color(persona_color entity)
		{
			this.SendPropertyChanging();
			entity.color = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.persona")]
	public partial class persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_persona;
		
		private string _cedula;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _correo;
		
		private string _clave;
		
		private int _ciudad_id;
		
		private EntitySet<persona_color> _persona_color;
		
		private EntityRef<ciudad> _ciudad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_personaChanging(int value);
    partial void Onid_personaChanged();
    partial void OncedulaChanging(string value);
    partial void OncedulaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnclaveChanging(string value);
    partial void OnclaveChanged();
    partial void Onciudad_idChanging(int value);
    partial void Onciudad_idChanged();
    #endregion
		
		public persona()
		{
			this._persona_color = new EntitySet<persona_color>(new Action<persona_color>(this.attach_persona_color), new Action<persona_color>(this.detach_persona_color));
			this._ciudad = default(EntityRef<ciudad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persona", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_persona
		{
			get
			{
				return this._id_persona;
			}
			set
			{
				if ((this._id_persona != value))
				{
					this.Onid_personaChanging(value);
					this.SendPropertyChanging();
					this._id_persona = value;
					this.SendPropertyChanged("id_persona");
					this.Onid_personaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this.OncedulaChanging(value);
					this.SendPropertyChanging();
					this._cedula = value;
					this.SendPropertyChanged("cedula");
					this.OncedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clave", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string clave
		{
			get
			{
				return this._clave;
			}
			set
			{
				if ((this._clave != value))
				{
					this.OnclaveChanging(value);
					this.SendPropertyChanging();
					this._clave = value;
					this.SendPropertyChanged("clave");
					this.OnclaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ciudad_id", DbType="Int NOT NULL")]
		public int ciudad_id
		{
			get
			{
				return this._ciudad_id;
			}
			set
			{
				if ((this._ciudad_id != value))
				{
					if (this._ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onciudad_idChanging(value);
					this.SendPropertyChanging();
					this._ciudad_id = value;
					this.SendPropertyChanged("ciudad_id");
					this.Onciudad_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_persona_color", Storage="_persona_color", ThisKey="id_persona", OtherKey="id_persona")]
		public EntitySet<persona_color> persona_color
		{
			get
			{
				return this._persona_color;
			}
			set
			{
				this._persona_color.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudad_persona", Storage="_ciudad", ThisKey="ciudad_id", OtherKey="id_ciudad", IsForeignKey=true)]
		public ciudad ciudad
		{
			get
			{
				return this._ciudad.Entity;
			}
			set
			{
				ciudad previousValue = this._ciudad.Entity;
				if (((previousValue != value) 
							|| (this._ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudad.Entity = null;
						previousValue.persona.Remove(this);
					}
					this._ciudad.Entity = value;
					if ((value != null))
					{
						value.persona.Add(this);
						this._ciudad_id = value.id_ciudad;
					}
					else
					{
						this._ciudad_id = default(int);
					}
					this.SendPropertyChanged("ciudad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_persona_color(persona_color entity)
		{
			this.SendPropertyChanging();
			entity.persona = this;
		}
		
		private void detach_persona_color(persona_color entity)
		{
			this.SendPropertyChanging();
			entity.persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.persona_color")]
	public partial class persona_color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_persona;
		
		private int _color_id;
		
		private EntityRef<color> _color;
		
		private EntityRef<persona> _persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_personaChanging(int value);
    partial void Onid_personaChanged();
    partial void Oncolor_idChanging(int value);
    partial void Oncolor_idChanged();
    #endregion
		
		public persona_color()
		{
			this._color = default(EntityRef<color>);
			this._persona = default(EntityRef<persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persona", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_persona
		{
			get
			{
				return this._id_persona;
			}
			set
			{
				if ((this._id_persona != value))
				{
					if (this._persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personaChanging(value);
					this.SendPropertyChanging();
					this._id_persona = value;
					this.SendPropertyChanged("id_persona");
					this.Onid_personaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					if (this._color.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncolor_idChanging(value);
					this.SendPropertyChanging();
					this._color_id = value;
					this.SendPropertyChanged("color_id");
					this.Oncolor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="color_persona_color", Storage="_color", ThisKey="color_id", OtherKey="id_color", IsForeignKey=true)]
		public color color
		{
			get
			{
				return this._color.Entity;
			}
			set
			{
				color previousValue = this._color.Entity;
				if (((previousValue != value) 
							|| (this._color.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._color.Entity = null;
						previousValue.persona_color.Remove(this);
					}
					this._color.Entity = value;
					if ((value != null))
					{
						value.persona_color.Add(this);
						this._color_id = value.id_color;
					}
					else
					{
						this._color_id = default(int);
					}
					this.SendPropertyChanged("color");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_persona_color", Storage="_persona", ThisKey="id_persona", OtherKey="id_persona", IsForeignKey=true)]
		public persona persona
		{
			get
			{
				return this._persona.Entity;
			}
			set
			{
				persona previousValue = this._persona.Entity;
				if (((previousValue != value) 
							|| (this._persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._persona.Entity = null;
						previousValue.persona_color.Remove(this);
					}
					this._persona.Entity = value;
					if ((value != null))
					{
						value.persona_color.Add(this);
						this._id_persona = value.id_persona;
					}
					else
					{
						this._id_persona = default(int);
					}
					this.SendPropertyChanged("persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
